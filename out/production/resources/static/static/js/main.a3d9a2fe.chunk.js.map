{"version":3,"sources":["logo.svg","components/viewBooking/viewBooking.js","components/AntFields.js","components/ValidateFields.js","components/FieldFormats.js","components/RenderBookingForm.js","components/BookingForm.js","components/RenderCustomBookingForm.js","components/CustomBookingForm.js","components/signin/signin.js","components/login/login.js","serviceWorker.js","App.js","index.js"],"names":["module","exports","FormItem","Form","Item","Option","Select","CreateAntField","Component","field","form","hasFeedback","label","selectOptions","submitCount","type","props","touched","name","submitted","hasError","errors","submittedError","touchedError","className","help","validateStatus","onBlur","setFieldTouched","onChange","value","target","setFieldValue","map","key","AntSelect","AntDatePicker","DatePicker","AntInput","Input","AntTimePicker","TimePicker","validateDate","moment","format","Date","now","validateEmail","test","isRequired","handleSubmit","values","onSubmit","component","validate","hourStep","minuteStep","defaultValue","bookingClient","tokenSeparators","style","width","initialValues","bookingDate","bookingTime","formProps","email","selectedDate","selectedTime","alert","NormalSigninForm","e","preventDefault","validateFields","err","message","loading","then","success","console","log","getFieldDecorator","this","class","rules","required","prefix","color","placeholder","React","Signin1","create","NormalLoginForm","valuePropName","initialValue","href","htmlType","Login","columns","title","dataIndex","data","i","push","age","address","NormalViewBookingForm","state","selectedRowKeys","start","setState","setTimeout","onSelectChange","rowSelection","hasSelected","length","marginBottom","onClick","disabled","marginLeft","dataSource","ViewBooking","Boolean","window","location","hostname","match","App","routing","path","render","RenderBookingForm","RenderCustomBookingForm","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a3d9a2fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Table, Button, Form } from 'antd';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\nclass NormalViewBookingForm extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the default column\n    loading: false,\n  };\n\n  start = () => {\n    this.setState({ loading: true });\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n\n  onSelectChange = selectedRowKeys => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  render() {\n    const { loading, selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <div>\n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={this.start} disabled={!hasSelected} loading={loading}>\n            Reload\n          </Button>\n          <span style={{ marginLeft: 8 }}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n        </div>\n        <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, mountNode);\n\nconst ViewBooking = Form.create({ name: 'view_booking' })(NormalViewBookingForm);\n\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\nexport default ViewBooking;","import map from \"lodash/map\";\nimport React from \"react\";\nimport { DatePicker, Form, Input, TimePicker, Select } from \"antd\";\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\nconst CreateAntField = Component => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  selectOptions,\n  submitCount,\n  type,\n  ...props\n}) => {\n  const touched = form.touched[field.name];\n  const submitted = submitCount > 0;\n  const hasError = form.errors[field.name];\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n  const onInputChange = ({ target: { value } }) =>\n    form.setFieldValue(field.name, value);\n  const onChange = value => form.setFieldValue(field.name, value);\n  const onBlur = () => form.setFieldTouched(field.name, true);\n  return (\n    <div className=\"field-container\">\n      <FormItem\n        label={label}\n        hasFeedback={\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\n        }\n        help={submittedError || touchedError ? hasError : false}\n        validateStatus={submittedError || touchedError ? \"error\" : \"success\"}\n      >\n        <Component\n          {...field}\n          {...props}\n          onBlur={onBlur}\n          onChange={type ? onInputChange : onChange}\n        >\n          {selectOptions &&\n            map(selectOptions, name => <Option key={name}>{name}</Option>)}\n        </Component>\n      </FormItem>\n    </div>\n  );\n};\n\nexport const AntSelect = CreateAntField(Select);\nexport const AntDatePicker = CreateAntField(DatePicker);\nexport const AntInput = CreateAntField(Input);\nexport const AntTimePicker = CreateAntField(TimePicker);\n","import moment from \"moment\";\nimport { dateFormat } from \"./FieldFormats\";\n\nexport const validateDate = value => {\n  let errors;\n\n  if (!value) {\n    errors = \"Required!\";\n  } else if (\n    moment(value).format(dateFormat) < moment(Date.now()).format(dateFormat)\n  ) {\n    errors = \"Invalid date!\";\n  }\n\n  return errors;\n};\n\nexport const validateEmail = value => {\n  let errors;\n\n  if (!value) {\n    errors = \"Required!\";\n  } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n    errors = \"Invalid email address!\";\n  }\n\n  return errors;\n};\n\nexport const isRequired = value => (!value ? \"Required!\" : \"\");\n","export const dateFormat = \"MM-DD-YYYY\";\nexport const timeFormat = \"HH:mm\";\n","import React from \"react\";\nimport { Form, Field } from \"formik\";\nimport { AntDatePicker, AntInput, AntSelect, AntTimePicker } from \"./AntFields\";\nimport { dateFormat, timeFormat } from \"./FieldFormats\";\nimport { validateDate, validateEmail, isRequired } from \"./ValidateFields\";\n\nexport default ({ handleSubmit, values, submitCount }) => (\n  <Form className=\"form-container\" onSubmit={handleSubmit}>\n    <Field\n      component={AntInput}\n      name=\"email\"\n      type=\"email\"\n      label=\"Email\"\n      validate={validateEmail}\n      submitCount={submitCount}\n      hasFeedback\n    />\n    <Field\n      component={AntDatePicker}\n      name=\"bookingDate\"\n      label=\"Booking Date\"\n      // defaultValue={values.bookingDate}\n      format={dateFormat}\n      validate={validateDate}\n      submitCount={submitCount}\n      hasFeedback\n    />\n    <Field\n      component={AntTimePicker}\n      name=\"bookingTime\"\n      label=\"Booking Time\"\n      // defaultValue={values.bookingTime}\n      format={timeFormat}\n      hourStep={1}\n      minuteStep={5}\n      validate={isRequired}\n      submitCount={submitCount}\n      hasFeedback\n    />\n    <Field\n      component={AntSelect}\n      name=\"bookingClient\"\n      label=\"Client\"\n      defaultValue={values.bookingClient}\n      selectOptions={values.selectOptions}\n      validate={isRequired}\n      submitCount={submitCount}\n      tokenSeparators={[\",\"]}\n      style={{ width: 200 }}\n      hasFeedback\n    />\n    <div className=\"submit-container\">\n      <button className=\"ant-btn ant-btn-primary\" type=\"submit\">\n        Submit\n      </button>\n    </div>\n  </Form>\n);\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport RenderBookingForm from \"./RenderBookingForm\";\nimport { dateFormat, timeFormat } from \"./FieldFormats\";\nimport moment from \"moment\";\n\nconst initialValues = {\n  bookingClient: \"\",\n  bookingDate: moment(Date.now()),\n  bookingTime: moment(Date.now()),\n  selectOptions: [\"Mark\", \"Bob\", \"Anthony\"]\n};\n\nconst handleSubmit = formProps => {\n  const { bookingClient, bookingDate, bookingTime, email } = formProps;\n  const selectedDate = moment(bookingDate).format(dateFormat);\n  const selectedTime = moment(bookingTime).format(timeFormat);\n  alert(\n    `Email: ${email} \\nSelected Date: ${selectedDate} \\nSelected Time: ${selectedTime}\\nSelected Client: ${bookingClient}`\n  );\n};\n\nexport default () => (\n  <Formik\n    initialValues={initialValues}\n    onSubmit={handleSubmit}\n    render={RenderBookingForm}\n  />\n);\n","import React from \"react\";\nimport { Form, Field } from \"formik\";\nimport { AntDatePicker, AntInput, AntSelect, AntTimePicker } from \"./AntFields\";\nimport { dateFormat, timeFormat } from \"./FieldFormats\";\nimport { validateDate, validateEmail, isRequired } from \"./ValidateFields\";\n\nexport default ({ handleSubmit, values, submitCount }) => (\n  <Form className=\"form-container\" onSubmit={handleSubmit}>\n    <Field\n      component={AntInput}\n      name=\"username\"\n      type=\"username\"\n      label=\"User Name\"\n      validate={validateEmail}\n      submitCount={submitCount}\n      hasFeedback\n    />\n    <Field\n      component={AntDatePicker}\n      name=\"bookingDate\"\n      label=\"Booking Date\"\n      // defaultValue={values.bookingDate}\n      format={dateFormat}\n      validate={validateDate}\n      submitCount={submitCount}\n      hasFeedback\n    />\n    <Field\n      component={AntTimePicker}\n      name=\"bookingTime\"\n      label=\"Booking Time\"\n      // defaultValue={values.bookingTime}\n      format={timeFormat}\n      hourStep={1}\n      minuteStep={5}\n      validate={isRequired}\n      submitCount={submitCount}\n      hasFeedback\n    />\n    {/* <Field\n      component={AntSelect}\n      name=\"bookingClient\"\n      label=\"Client\"\n      defaultValue={values.bookingClient}\n      selectOptions={values.selectOptions}\n      validate={isRequired}\n      submitCount={submitCount}\n      tokenSeparators={[\",\"]}\n      style={{ width: 200 }}\n      hasFeedback\n    /> */}\n    <div className=\"submit-container\">\n      <button className=\"ant-btn ant-btn-primary\" type=\"submit\">\n        Submit\n      </button>\n    </div>\n  </Form>\n);\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport RenderCustomBookingForm from \"./RenderCustomBookingForm\";\nimport { dateFormat, timeFormat } from \"./FieldFormats\";\nimport moment from \"moment\";\n\nconst initialValues = {\n  bookingClient: \"\",\n  bookingDate: moment(Date.now()),\n  bookingTime: moment(Date.now()),\n  selectOptions: [\"Mark\", \"Bob\", \"Anthony\"]\n};\n\nconst handleSubmit = formProps => {\n  const { bookingClient, bookingDate, bookingTime, email } = formProps;\n  const selectedDate = moment(bookingDate).format(dateFormat);\n  const selectedTime = moment(bookingTime).format(timeFormat);\n  alert(\n    `Email: ${email} \\nSelected Date: ${selectedDate} \\nSelected Time: ${selectedTime}\\nSelected Client: ${bookingClient}`\n  );\n};\n\nexport default () => (\n  <Formik\n    initialValues={initialValues}\n    onSubmit={handleSubmit}\n    render={RenderCustomBookingForm}\n  />\n);\n","import React from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport '../../index.css'\nimport Signin from '../signin/signin'\n\nclass NormalSigninForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        message.loading(\"Now you are logging in\", 2.5)\n        .then(()=>{\n                message.success(\"You are now logged in\");\n        });\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n    <article class=\"mw5 center bg-white shadow-5 br3 pa3 pa4-ns mv3 ba b--black-10\">\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('confirmPassword', {\n            rules: [{ required: true, message: 'Please confirm your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n            />,\n          )}\n        </Form.Item>\n        {/* <Form.Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)}\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          Or <a href=\"Signin\">register now!</a>\n        </Form.Item> */}\n      </Form>\n    </article>\n    );\n  }\n}\n\nconst Signin1 = Form.create({ name: 'normal_signin' })(NormalSigninForm);\n\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\nexport default Signin1;","import React from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport '../../index.css'\nimport Signin from '../signin/signin'\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        message.loading(\"Now you are logging in\", 2.5)\n        .then(()=>{\n                message.success(\"You are now logged in\");\n        });\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n    <article class=\"mw5 center bg-white shadow-5 br3 pa3 pa4-ns mv3 ba b--black-10\">\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)}\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          Or <a href=\"Signin\">register now!</a>\n        </Form.Item>\n      </Form>\n    </article>\n    );\n  }\n}\n\nconst Login = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\nexport default Login;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './components/login/login';\n\nfunction App() {\n  return (\n    <div>\n\n      <Login />\n      {/* <Signin path='/Signin'> */}\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BookingForm from \"./components/BookingForm\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n// import ViewBooking from \"./components/ViewBooking\";\nimport CustomBookingForm from \"./components/CustomBookingForm\";\nimport Login from \"./components/login/login\"\nimport Signin1 from \"./components/signin/signin\";\nimport ViewBooking from './components/viewBooking/viewBooking';\nimport 'antd/dist/antd.css';\nimport 'tachyons';\n// import { Router, Link } from \"@reach/router\"\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport RenderCustomBookingForm from \"./components/RenderCustomBookingForm\";\n\n\n\n\n// ReactDOM.render(\n// //   <Router>\n// //     <BookingForm path=\"/\" />\n// //     <CustomBookingForm path=\"view\" />\n// //   </Router>\n//   <div>\n//     {/* // <h1>Booking Form</h1> */}\n//     <App />,\n//     {/* <RenderCustomBookingForm /view > */}\n//     {/* <CustomBookingForm \"/view\"> */}\n//   </div>,\n//   document.getElementById(\"root\")\n// );\n\n// serviceWorker.unregister();\n\n\nconst routing = (\n  <Router>\n    <div>\n      <Route path=\"/\" component={BookingForm} />\n      <Route path=\"/book\" component={CustomBookingForm} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signin\" component={Signin1} />\n      <Route path=\"/view\" component={ViewBooking} />\n    </div>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}